/*
*This header is generated by classdump-dyld 1.5
*on Tuesday, June 8, 2021 at 2:19:29 PM Central Daylight Time
*Operating System: Version 14.7 (Build 18G5023c)
*Image Source: /System/Library/Frameworks/CoreTelephony.framework/Support/CommCenter
*classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
*/

#import <CommCenter/CommCenter-Structs.h>
#import <libCommCenterBase.dylib/OCSharedLoggable.h>

@protocol CTXPCClientBehaviorTrackerDelegate;
@interface CTXPCClientBehaviorTracker : OCSharedLoggable {

	vector<CTXPCClientTracker, std::__1::allocator<CTXPCClientTracker>>* _clients;
	unique_ptr<ctu::RestModule, std::__1::default_delete<ctu::RestModule>>* _restModule;
	property_derived_sink_t<radio_mode::is_online> _basebandState;
	BOOL _oldBBState;
	time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>> _BBActivationTimeStamp;
	id<CTXPCClientBehaviorTrackerDelegate> _delegate;

}

@property (assign,nonatomic,__weak) id<CTXPCClientBehaviorTrackerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
-(id)initWithQueue:(const queue*)arg1 ;
-(void)bootstrap;
-(void)processRequest:(SEL)arg1 forConnection:(id)arg2 withName:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*)arg3 ;
-(void)_triggerFaultWithMessage:(id)arg1 forConnection:(id)arg2 ;
-(CTXPCClientTracker*)_getOrCreateClientTracker:(id)arg1 withName:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*)arg2 ;
-(void)_maybeCleanupClient:(id)arg1 withName:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*)arg2 ;
-(unsigned char)_getThreshold:(SEL)arg1 ;
-(basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>)cleanTypeString:(id)arg1 ;
-(BOOL)_isClientWhiteListed:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>*)arg1 ;
-(BOOL)_isSelectorWhiteListed:(SEL)arg1 ;
-(BOOL)_isQuiescent:(time_point<std::__1::chrono::system_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000>>>)arg1 ;
-(id<CTXPCClientBehaviorTrackerDelegate>)delegate;
-(void)setDelegate:(id<CTXPCClientBehaviorTrackerDelegate>)arg1 ;
@end

